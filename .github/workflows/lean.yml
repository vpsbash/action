
name: Lean

on: 
  release:
    types: [published]
  push:
    branches: 
      - master
  schedule:
    - cron: 0 0,6,12,18 * * *

env:
  CONFIG_FILE: seed.config
  
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          # 
          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/host ./build_dir/host
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir
          rm -rf openwrt
          df -h
      - name: Clone source code
        run: |
          #git clone https://github.com/openwrt/openwrt
          git clone https://github.com/coolsnowwolf/lede
          mv lede openwrt
          cd openwrt/

          #git clone https://github.com/Leo-Jo-My/my package/my
          #git clone https://github.com/Leo-Jo-My/luci-theme-Butterfly package/luci-theme-Butterfly
          #git clone https://github.com/Leo-Jo-My/luci-theme-opentomato package/luci-theme-opentomato
          #git clone https://github.com/Leo-Jo-My/luci-theme-opentomcat package/luci-theme-opentomcat
          git clone https://github.com/Leo-Jo/luci-app-koolproxyR package/luci-app-koolproxyR
          #git clone https://github.com/rufengsuixing/luci-app-adguardhome package/luci-app-adguardhome
          #git clone https://github.com/vernesong/OpenClash package/OpenClash
      - name: Load basic configuration
        run: |
          pwd
          #cp lede/package/lean openwrt/package/ -r
          #cp lede/include/target.mk openwrt/include/target.mk 
          #cp lede/package/network/config/firewall/ openwrt/package/network/config/firewall/ -r
          cd openwrt/
          sed -i "s/16384/65536/" package/kernel/linux/files/sysctl-nf-conntrack.conf 
          sed -i '$d' package/lean/default-settings/files/zzz-default-settings
          echo echo 0xDEADBEEF \> /etc/config/google_fu_mode >>package/lean/default-settings/files/zzz-default-settings
          echo exit 0  >>package/lean/default-settings/files/zzz-default-settings
      
      - name: Update feeds
        run: |
          cd openwrt/
          ./scripts/feeds update -a
          ./scripts/feeds install -a
  
      - name: Load custom configuration
        run: |
          [ -e $CONFIG_FILE ] && cat $CONFIG_FILE >> .config
      
      #- name: SSH connection to Actions
      #  uses: vpsbash/debugger-action@master
      
      - name: Generate configuration file
        run: |
          cd openwrt/
          make defconfig
      - name: Make download
        run: |
          cd openwrt/
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          cd /home/runner/work/action/action/openwrt
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          #du -h --max-depth=1 ./build_dir
          #du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: find /home/runner/work/action/action/openwrt/bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Git Commit
        run: |
          date=$(date +%m%d%Y-%H%M%S)
          touch pre-release/lean-${date}.tgz
          #tar czf pre-release/lean-${date}.tgz openwrt/bin/targets/
          git config --global user.email rcdfrd@163.com
          git config --global user.name vpsbash

          git add pre-release/lean-${date}.tgz
          git commit -m "$(date) update new lean"
      #- name: Upload artifact
      #  uses: actions/upload-artifact@master
      #  with:
      #    name: Lean firmware
      #    path: openwrt/bin/targets/
